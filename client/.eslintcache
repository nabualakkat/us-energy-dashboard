[{"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js":"1","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js":"2","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js":"3","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js":"4","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js":"5","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js":"6","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js":"7","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js":"8","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js":"9","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js":"10","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js":"11","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js":"12","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js":"13","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js":"14","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js":"15","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js":"16","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js":"17","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js":"18","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js":"19","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js":"20","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js":"21","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js":"22","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js":"23","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js":"24","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js":"25","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js":"26"},{"size":782,"mtime":1612567350338,"results":"27","hashOfConfig":"28"},{"size":337,"mtime":1612552972870,"results":"29","hashOfConfig":"28"},{"size":148,"mtime":1612463427815,"results":"30","hashOfConfig":"28"},{"size":447,"mtime":1612463429459,"results":"31","hashOfConfig":"28"},{"size":432,"mtime":1612387530769,"results":"32","hashOfConfig":"28"},{"size":381,"mtime":1612450047760,"results":"33","hashOfConfig":"28"},{"size":1141,"mtime":1612448798945,"results":"34","hashOfConfig":"28"},{"size":993,"mtime":1612452625994,"results":"35","hashOfConfig":"28"},{"size":159,"mtime":1612452989907,"results":"36","hashOfConfig":"28"},{"size":2144,"mtime":1612817229123,"results":"37","hashOfConfig":"28"},{"size":2359,"mtime":1612816815114,"results":"38","hashOfConfig":"28"},{"size":4539,"mtime":1612819373572,"results":"39","hashOfConfig":"28"},{"size":503,"mtime":1612816688555,"results":"40","hashOfConfig":"28"},{"size":397,"mtime":1612448554711,"results":"41","hashOfConfig":"28"},{"size":2990,"mtime":1612885448790,"results":"42","hashOfConfig":"28"},{"size":2046,"mtime":1612807306371,"results":"43","hashOfConfig":"28"},{"size":2494,"mtime":1612807286695,"results":"44","hashOfConfig":"28"},{"size":1774,"mtime":1612807261705,"results":"45","hashOfConfig":"28"},{"size":436,"mtime":1612567630039,"results":"46","hashOfConfig":"28"},{"size":4009,"mtime":1612881791718,"results":"47","hashOfConfig":"28"},{"size":1879,"mtime":1612654393175,"results":"48","hashOfConfig":"28"},{"size":1959,"mtime":1612654529232,"results":"49","hashOfConfig":"28"},{"size":2569,"mtime":1612795608211,"results":"50","hashOfConfig":"28"},{"size":2486,"mtime":1612795193373,"results":"51","hashOfConfig":"28"},{"size":6604,"mtime":1612890576226,"results":"52","hashOfConfig":"28"},{"size":1385,"mtime":1612824062909,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"143x47j",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js",[],["116","117"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js",["118"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\r\n\r\nconst initialState=[]\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}",["119","120"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js",["121","122"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js",[],["123","124"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js",["125"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js",["126","127"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js",["128","129","130","131"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js",["132"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n//Local\r\nimport XYChart from './XYChart';\r\n\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    position: 'relative',\r\n    margin: '0.5rem',\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  formControl: {\r\n    position: 'absolute',\r\n    bottom: '1rem',\r\n    right: '1rem',\r\n    zIndex: 1000,\r\n  },\r\n}));\r\n\r\nconst XYChartWrapper = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [source, setSource] = useState('Coal');\r\n\r\n  const handleChange = (e) => {\r\n    setSource(e.target.value);\r\n  };\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <FormControl\r\n        size=\"small\"\r\n        className={classes.formControl}\r\n        variant=\"outlined\"\r\n      >\r\n        <Select value={source} onChange={handleChange}>\r\n          <MenuItem value=\"Natural Gas\">Natural Gas</MenuItem>\r\n          <MenuItem value=\"Coal\">Coal</MenuItem>\r\n          <MenuItem value=\"Nuclear\">Nuclear</MenuItem>\r\n          <MenuItem value=\"Wind\">Wind</MenuItem>\r\n          <MenuItem value=\"Hydroelectric\">Hydroelectric</MenuItem>\r\n          <MenuItem value=\"Solar\">Solar</MenuItem>\r\n          <MenuItem value=\"Geothermal\">Geothermal</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        {`Production / Consumption of ${source}`}\r\n      </Typography>\r\n      <XYChart npbs={npbs} source={source} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(XYChartWrapper);\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js",["133"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  buttonGroup: {\r\n    width: '100%',\r\n    fontSize: '.8rem',\r\n    zIndex: 1000,\r\n  },\r\n  button: {\r\n    fontSize: '0.5rem',\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nconst PieChartWrapper = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('Production');\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        Total {value} by Source\r\n      </Typography>\r\n      <Typography\r\n        className={`${classes.title} ${classes.subtitle}`}\r\n        variant=\"subtitle1\"\r\n      >\r\n        Latest Available: {moment(npbs[0].month).format('MMM YYYY')}\r\n      </Typography>\r\n      <ButtonGroup\r\n        className={classes.buttonGroup}\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={() => setValue('Production')}\r\n          color={value === 'Production' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Production'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Production\r\n        </Button>\r\n        <Button\r\n          onClick={() => setValue('Consumption')}\r\n          color={value === 'Consumption' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Consumption'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Consumption\r\n        </Button>\r\n      </ButtonGroup>\r\n      <PieChart npbs={npbs} type={value} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nPieChartWrapper.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChartWrapper);\r\n",["134","135"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js",["136","137"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  unit: {\r\n    fontSize: '.65rem',\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    height: 'auto%',\r\n    marginBottom: '1rem',\r\n    boxSizing: 'border-box',\r\n  },\r\n  cell: {\r\n    paddingInline: 0,\r\n    paddingBlock: '0.75rem',\r\n  },\r\n}));\r\n\r\nconst DataTable = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(moment(npbs[0].month));\r\n  const set = npbs.filter(\r\n    (d) => moment(d.month).format('YYYY MM') === moment(value).format('YYYY MM')\r\n  );\r\n  const rows = set[0].data;\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() => setValue(moment(value).subtract(1, 'months'))}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">\r\n            {moment(value).format('MMMM YYYY')}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() =>\r\n              set.length > 0 && setValue(moment(value).add(1, 'months'))\r\n            }\r\n            disabled={value >= moment(npbs[0].month)}\r\n          >\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Table className={classes.table} aria-label=\"npbs-table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.cell}>Source</TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Production{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Consumption{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow className={classes.row} key={row.source}>\r\n              <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                {row.source}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.production}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.consumption}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataTable);\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js",["138"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Material-UI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: '1rem 0.5rem',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  value: {\r\n    fontSize: '2rem',\r\n  },\r\n}));\r\n\r\nexport const Expenditures = ({ expenditures }) => {\r\n  const classes = useStyles();\r\n  const percentGrowth = (\r\n    ((expenditures[0].value - expenditures[1].value) / expenditures[1].value) *\r\n    100\r\n  ).toFixed(2);\r\n  const trend = percentGrowth > 0;\r\n  const positive = (\r\n    <div>\r\n      <TrendingUpIcon color=\"primary\" />\r\n      <span>{percentGrowth}%</span>\r\n    </div>\r\n  );\r\n  const negative = (\r\n    <div>\r\n      <TrendingDownIcon color=\"secondary\" />\r\n      <span>{percentGrowth * -1}%</span>\r\n    </div>\r\n  );\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Typography align=\"center\" variant=\"h6\">\r\n        Average Retail Price of Electricity\r\n      </Typography>\r\n      <div className={classes.valueContainer}>\r\n        <Typography className={classes.value} align=\"center\" variant=\"h2\">\r\n          {expenditures[0].value}\r\n        </Typography>\r\n        {trend ? positive : negative}\r\n      </div>\r\n      <Typography align=\"center\" variant=\"body2\">\r\n        {expenditures[0].unit}\r\n      </Typography>\r\n    </Card>\r\n  );\r\n};\r\n\r\nExpenditures.propTypes = {\r\n  expenditures: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  expenditures: state.data.expenditure.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Expenditures);\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js",["139","140","141"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js",["142","143","144","145"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport Map from './Map';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  buttonGroup: {\r\n    width: '100%',\r\n    fontSize: '.8rem',\r\n    zIndex: 1000,\r\n  },\r\n  button: {\r\n    fontSize: '0.5rem',\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nconst RegionalWrapper = ({ regional }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('Production');\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        Regional Electricity Generation\r\n      </Typography>\r\n\r\n      <Map regional={regional} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nRegionalWrapper.propTypes = {\r\n  regional: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  regional: state.data.regional.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RegionalWrapper);\r\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":5,"column":1,"nodeType":"152","endLine":15,"endColumn":2},{"ruleId":"146","replacedBy":"153"},{"ruleId":"148","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":14,"column":21,"nodeType":"157","messageId":"158","endLine":14,"endColumn":29},{"ruleId":"146","replacedBy":"160"},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","severity":1,"message":"151","line":49,"column":1,"nodeType":"152","endLine":119,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":105,"column":9,"nodeType":"164","endLine":105,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":122,"column":9,"nodeType":"164","endLine":122,"endColumn":37},{"ruleId":"155","severity":1,"message":"165","line":1,"column":25,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"166","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":20},{"ruleId":"155","severity":1,"message":"159","line":7,"column":22,"nodeType":"157","messageId":"158","endLine":7,"endColumn":30},{"ruleId":"167","severity":1,"message":"168","line":82,"column":6,"nodeType":"169","endLine":82,"endColumn":14,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"159","line":8,"column":22,"nodeType":"157","messageId":"158","endLine":8,"endColumn":30},{"ruleId":"155","severity":1,"message":"159","line":9,"column":22,"nodeType":"157","messageId":"158","endLine":9,"endColumn":30},{"ruleId":"146","replacedBy":"171"},{"ruleId":"148","replacedBy":"172"},{"ruleId":"155","severity":1,"message":"173","line":7,"column":8,"nodeType":"157","messageId":"158","endLine":7,"endColumn":16},{"ruleId":"155","severity":1,"message":"159","line":9,"column":22,"nodeType":"157","messageId":"158","endLine":9,"endColumn":30},{"ruleId":"155","severity":1,"message":"174","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"165","line":1,"column":25,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"175","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":12},{"ruleId":"167","severity":1,"message":"176","line":181,"column":6,"nodeType":"169","endLine":181,"endColumn":8,"suggestions":"177"},{"ruleId":"155","severity":1,"message":"174","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":14},{"ruleId":"155","severity":1,"message":"159","line":9,"column":22,"nodeType":"157","messageId":"158","endLine":9,"endColumn":30},{"ruleId":"155","severity":1,"message":"178","line":40,"column":10,"nodeType":"157","messageId":"158","endLine":40,"endColumn":15},{"ruleId":"155","severity":1,"message":"179","line":40,"column":17,"nodeType":"157","messageId":"158","endLine":40,"endColumn":25},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["180"],["181"],"no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.",["180"],["181"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'npbs'. Either include it or remove the dependency array.","ArrayExpression",["182"],["180"],["181"],"'PieChart' is defined but never used.","'moment' is defined but never used.","'map' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'color', 'getStates', and 'getValue'. Either include them or remove the dependency array.",["183"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [npbs, source]",{"range":"188","text":"189"},"Update the dependencies array to be: [color, getStates, getValue]",{"range":"190","text":"191"},[2869,2877],"[npbs, source]",[6493,6495],"[color, getStates, getValue]"]