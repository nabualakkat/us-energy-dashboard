[{"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js":"1","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js":"2","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js":"3","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js":"4","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js":"5","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js":"6","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js":"7","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js":"8","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js":"9","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js":"10","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js":"11","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js":"12","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js":"13","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js":"14","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js":"15","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js":"16","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js":"17","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js":"18","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js":"19","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js":"20","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js":"21","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js":"22","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js":"23","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js":"24","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js":"25","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js":"26","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChartWrapper.js":"27","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChart.js":"28","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\DownloadButton.js":"29"},{"size":782,"mtime":1612567350338,"results":"30","hashOfConfig":"31"},{"size":337,"mtime":1612895993960,"results":"32","hashOfConfig":"31"},{"size":148,"mtime":1612463427815,"results":"33","hashOfConfig":"31"},{"size":447,"mtime":1612463429459,"results":"34","hashOfConfig":"31"},{"size":432,"mtime":1612387530769,"results":"35","hashOfConfig":"31"},{"size":381,"mtime":1612450047760,"results":"36","hashOfConfig":"31"},{"size":1141,"mtime":1612448798945,"results":"37","hashOfConfig":"31"},{"size":993,"mtime":1612452625994,"results":"38","hashOfConfig":"31"},{"size":159,"mtime":1612452989907,"results":"39","hashOfConfig":"31"},{"size":2144,"mtime":1612817229123,"results":"40","hashOfConfig":"31"},{"size":2359,"mtime":1612816815114,"results":"41","hashOfConfig":"31"},{"size":4726,"mtime":1612992013170,"results":"42","hashOfConfig":"31"},{"size":503,"mtime":1612816688555,"results":"43","hashOfConfig":"31"},{"size":397,"mtime":1612448554711,"results":"44","hashOfConfig":"31"},{"size":2990,"mtime":1612885448790,"results":"45","hashOfConfig":"31"},{"size":2163,"mtime":1612992712665,"results":"46","hashOfConfig":"31"},{"size":2494,"mtime":1612807286695,"results":"47","hashOfConfig":"31"},{"size":1774,"mtime":1612807261705,"results":"48","hashOfConfig":"31"},{"size":436,"mtime":1612567630039,"results":"49","hashOfConfig":"31"},{"size":4009,"mtime":1612881791718,"results":"50","hashOfConfig":"31"},{"size":2007,"mtime":1612992093972,"results":"51","hashOfConfig":"31"},{"size":2062,"mtime":1612992283630,"results":"52","hashOfConfig":"31"},{"size":2820,"mtime":1612992032811,"results":"53","hashOfConfig":"31"},{"size":2602,"mtime":1612992581639,"results":"54","hashOfConfig":"31"},{"size":6604,"mtime":1612890576226,"results":"55","hashOfConfig":"31"},{"size":1511,"mtime":1612993193930,"results":"56","hashOfConfig":"31"},{"size":1391,"mtime":1612993348502,"results":"57","hashOfConfig":"31"},{"size":1435,"mtime":1612897387204,"results":"58","hashOfConfig":"31"},{"size":4542,"mtime":1612993222777,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"143x47j",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js",[],["128","129"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js",[],["130","131"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js",["132"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\r\n\r\nconst initialState=[]\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}",["133","134"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js",["135","136"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js",[],["137","138"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js",["139"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js",["140","141","142"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js",["143","144","145","146"],"import React, { useRef, useState, useLayoutEffect } from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\r\n\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nconst XYChart = ({ npbs, source }) => {\r\n  const chart = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    let x = am4core.create('chartdiv', am4charts.XYChart);\r\n    const rawData = [...npbs].reverse();\r\n    x.paddingRight = 20;\r\n    const data = rawData.map((d) => {\r\n      const sourceData = d.data.filter(\r\n        (sourceValue) => sourceValue.source === source\r\n      );\r\n      return {\r\n        month: d.month,\r\n        production: sourceData[0].production,\r\n        consumption: sourceData[0].consumption,\r\n      };\r\n    });\r\n    x.data = data;\r\n    x.responsive.enabled = true;\r\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n    valueAxis.title.text = \"Energy (Trillion BTU's)\";\r\n\r\n    let seriesA = x.series.push(new am4charts.LineSeries());\r\n    seriesA.dataFields.dateX = 'month';\r\n    seriesA.dataFields.valueY = 'production';\r\n    seriesA.stroke = am4core.color('#4CAF50');\r\n    seriesA.legendSettings.labelText = 'Production';\r\n    seriesA.strokeWidth = 3;\r\n    seriesA.tooltipText = `Production\\n{valueY}`;\r\n    seriesA.tooltip.getFillFromObject = false;\r\n    seriesA.tooltip.background.fill = am4core.color('#b5dfb7');\r\n    seriesA.tooltip.label.fill = am4core.color('#000000');\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let seriesB = x.series.push(new am4charts.LineSeries());\r\n    seriesB.dataFields.dateX = 'month';\r\n    seriesB.dataFields.valueY = 'consumption';\r\n    seriesB.stroke = am4core.color('#FF5722');\r\n    seriesB.legendSettings.labelText = 'Consumption';\r\n    seriesB.strokeWidth = 3;\r\n    seriesB.tooltipText = `Consumption\\n{valueY}`;\r\n    seriesB.tooltip.getFillFromObject = false;\r\n    seriesB.tooltip.background.fill = am4core.color('#ffb199');\r\n    seriesB.tooltip.label.fill = am4core.color('#000000');\r\n    x.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(seriesA);\r\n    scrollbarX.series.push(seriesB);\r\n    scrollbarX.minHeight = 10;\r\n    x.scrollbarX = scrollbarX;\r\n\r\n    x.events.on('ready', function () {\r\n      dateAxis.zoomToDates(\r\n        new Date(2010, 1, 1),\r\n        new Date(data[data.length - 1].month),\r\n        false\r\n      );\r\n    });\r\n    x.legend = new am4charts.Legend();\r\n\r\n    chart.current = x;\r\n\r\n    return () => {\r\n      x.dispose();\r\n    };\r\n  }, [source]);\r\n\r\n  return <div id=\"chartdiv\" style={{ width: '100%', height: '390px' }} />;\r\n};\r\n\r\nexport default XYChart;\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js",["147"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js",["148"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  buttonGroup: {\r\n    width: '100%',\r\n    fontSize: '.8rem',\r\n    zIndex: 1000,\r\n  },\r\n  button: {\r\n    fontSize: '0.5rem',\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nconst PieChartWrapper = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('Production');\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        Total {value} by Source\r\n      </Typography>\r\n      <Typography\r\n        className={`${classes.title} ${classes.subtitle}`}\r\n        variant=\"subtitle1\"\r\n      >\r\n        Latest Available: {moment(npbs[0].month).format('MMM YYYY')}\r\n      </Typography>\r\n      <ButtonGroup\r\n        className={classes.buttonGroup}\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={() => setValue('Production')}\r\n          color={value === 'Production' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Production'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Production\r\n        </Button>\r\n        <Button\r\n          onClick={() => setValue('Consumption')}\r\n          color={value === 'Consumption' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Consumption'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Consumption\r\n        </Button>\r\n      </ButtonGroup>\r\n      <PieChart npbs={npbs} type={value} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nPieChartWrapper.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChartWrapper);\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js",["149","150"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  unit: {\r\n    fontSize: '.65rem',\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    height: 'auto%',\r\n    marginBottom: '1rem',\r\n    boxSizing: 'border-box',\r\n  },\r\n  cell: {\r\n    paddingInline: 0,\r\n    paddingBlock: '0.75rem',\r\n  },\r\n}));\r\n\r\nconst DataTable = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(moment(npbs[0].month));\r\n  const set = npbs.filter(\r\n    (d) => moment(d.month).format('YYYY MM') === moment(value).format('YYYY MM')\r\n  );\r\n  const rows = set[0].data;\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() => setValue(moment(value).subtract(1, 'months'))}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">\r\n            {moment(value).format('MMMM YYYY')}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() =>\r\n              set.length > 0 && setValue(moment(value).add(1, 'months'))\r\n            }\r\n            disabled={value >= moment(npbs[0].month)}\r\n          >\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Table className={classes.table} aria-label=\"npbs-table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.cell}>Source</TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Production{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Consumption{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow className={classes.row} key={row.source}>\r\n              <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                {row.source}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.production}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.consumption}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataTable);\r\n",["151","152"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js",["153","154","155"],"import React, { useRef, useState, useLayoutEffect } from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4maps from '@amcharts/amcharts4/maps';\r\nimport am4geodata_usaAlbersLow from '@amcharts/amcharts4-geodata/usaAlbersLow';\r\n\r\nconst Map = ({ regional }) => {\r\n  const map = useRef(null);\r\n  const colorArray = [\r\n    '#F1EFD9',\r\n    '#EAEBCA',\r\n    '#DFE5BC',\r\n    '#D2DFAD',\r\n    '#C3D99F',\r\n    '#B3D291',\r\n    '#A0CB83',\r\n    '#8CC575',\r\n    '#77BE67',\r\n    '#60B659',\r\n    '#4CAF50',\r\n    '#48A754',\r\n    '#439F56',\r\n    '#3F9759',\r\n    '#3B8E5A',\r\n    '#36865B',\r\n    '#327D5C',\r\n    '#2E755B',\r\n    '#2A6C5A',\r\n    '#266458',\r\n  ];\r\n  const sum = (array) => {\r\n    return array.reduce((a, b) => a + b, 0);\r\n  };\r\n  const valueArray = regional.map((r) => {\r\n    const regionalArray = r.value.map((data) => data[1]);\r\n    return sum(regionalArray);\r\n  });\r\n  const sortedArray = valueArray.sort((a, b) => a - b);\r\n  const intervalLength =\r\n    (sortedArray[sortedArray.length - 1] - sortedArray[0]) /\r\n    (colorArray.length - 1);\r\n\r\n  const color = (value) => {\r\n    const interval = Math.floor((value - sortedArray[0]) / intervalLength);\r\n    return colorArray[interval];\r\n  };\r\n  const getValue = (region) => {\r\n    const regionData = regional.filter((r) => r.region === region);\r\n    const regionalValueArray = regionData[0].value.map((v) => v[1]);\r\n    return sum(regionalValueArray);\r\n  };\r\n  const getStates = (region) => {\r\n    const regionData = regional.filter((r) => r.region === region);\r\n    const states = regionData[0].states;\r\n    return states;\r\n  };\r\n  console.log(intervalLength);\r\n  console.log(valueArray);\r\n  console.log(color(1138349));\r\n  useLayoutEffect(() => {\r\n    let map = am4core.create('mapdiv', am4maps.MapChart);\r\n    map.geodata = am4geodata_usaAlbersLow;\r\n    map.projection = new am4maps.projections.Miller();\r\n    let california = new am4maps.MapPolygonSeries();\r\n    california.useGeodata = true;\r\n    california.include = getStates('California');\r\n    california.mapPolygons.template.tooltipText = `California: ${getValue(\r\n      'California'\r\n    )} megawatthours `;\r\n    california.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('California'))\r\n    );\r\n    map.series.push(california);\r\n    let carolinas = new am4maps.MapPolygonSeries();\r\n    carolinas.useGeodata = true;\r\n    carolinas.include = getStates('Carolinas');\r\n    carolinas.mapPolygons.template.tooltipText = `Carolinas: ${getValue(\r\n      'Carolinas'\r\n    )} megawatthours `;\r\n    carolinas.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Carolinas'))\r\n    );\r\n    map.series.push(carolinas);\r\n    let central = new am4maps.MapPolygonSeries();\r\n    central.useGeodata = true;\r\n    central.include = getStates('Central');\r\n    central.mapPolygons.template.tooltipText = `Central: ${getValue(\r\n      'Central'\r\n    )} megawatthours `;\r\n    central.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Central'))\r\n    );\r\n    map.series.push(central);\r\n    let florida = new am4maps.MapPolygonSeries();\r\n    florida.useGeodata = true;\r\n    florida.include = getStates('Florida');\r\n    florida.mapPolygons.template.tooltipText = `Florida: ${getValue(\r\n      'Florida'\r\n    )} megawatthours `;\r\n    florida.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Florida'))\r\n    );\r\n    map.series.push(florida);\r\n    let midAtlantic = new am4maps.MapPolygonSeries();\r\n    midAtlantic.useGeodata = true;\r\n    midAtlantic.include = getStates('Mid-Atlantic');\r\n    midAtlantic.mapPolygons.template.tooltipText = `Mid-Atlantic: ${getValue(\r\n      'Mid-Atlantic'\r\n    )} megawatthours `;\r\n    midAtlantic.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Mid-Atlantic'))\r\n    );\r\n    map.series.push(midAtlantic);\r\n    let newEngland = new am4maps.MapPolygonSeries();\r\n    newEngland.useGeodata = true;\r\n    newEngland.include = getStates('New England');\r\n    newEngland.mapPolygons.template.tooltipText = `New England: ${getValue(\r\n      'New England'\r\n    )} megawatthours `;\r\n    newEngland.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('New England'))\r\n    );\r\n    map.series.push(newEngland);\r\n    let newYork = new am4maps.MapPolygonSeries();\r\n    newYork.useGeodata = true;\r\n    newYork.include = getStates('New York');\r\n    newYork.mapPolygons.template.tooltipText = `New York: ${getValue(\r\n      'New York'\r\n    )} megawatthours `;\r\n    newYork.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('New York'))\r\n    );\r\n    map.series.push(newYork);\r\n    let northwest = new am4maps.MapPolygonSeries();\r\n    northwest.useGeodata = true;\r\n    northwest.include = getStates('Northwest');\r\n    northwest.mapPolygons.template.tooltipText = `Northwest: ${getValue(\r\n      'Northwest'\r\n    )} megawatthours `;\r\n    northwest.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Northwest'))\r\n    );\r\n    map.series.push(northwest);\r\n    let southeast = new am4maps.MapPolygonSeries();\r\n    southeast.useGeodata = true;\r\n    southeast.include = getStates('Southeast');\r\n    southeast.mapPolygons.template.tooltipText = `Southeast: ${getValue(\r\n      'Southeast'\r\n    )} megawatthours `;\r\n    southeast.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Southeast'))\r\n    );\r\n    map.series.push(southeast);\r\n    let southwest = new am4maps.MapPolygonSeries();\r\n    southwest.useGeodata = true;\r\n    southwest.include = getStates('Southwest');\r\n    southwest.mapPolygons.template.tooltipText = `Southwest: ${getValue(\r\n      'Southwest'\r\n    )} megawatthours `;\r\n    southwest.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Southwest'))\r\n    );\r\n    map.series.push(southwest);\r\n    let tennessee = new am4maps.MapPolygonSeries();\r\n    tennessee.useGeodata = true;\r\n    tennessee.include = getStates('Tennessee');\r\n    tennessee.mapPolygons.template.tooltipText = `Tennessee: ${getValue(\r\n      'Tennessee'\r\n    )} megawatthours `;\r\n    tennessee.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Tennessee'))\r\n    );\r\n    map.series.push(tennessee);\r\n    let texas = new am4maps.MapPolygonSeries();\r\n    texas.useGeodata = true;\r\n    texas.include = getStates('Texas');\r\n    texas.mapPolygons.template.tooltipText = `Texas: ${getValue(\r\n      'Texas'\r\n    )} megawatthours `;\r\n    texas.mapPolygons.template.fill = am4core.color(color(getValue('Texas')));\r\n    map.series.push(texas);\r\n  }, []);\r\n  return <div id=\"mapdiv\" style={{ width: '100%', height: '390px' }}></div>;\r\n};\r\n\r\nexport default Map;\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js",["156","157","158","159"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChartWrapper.js",["160","161","162","163","164"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChart.js",["165","166","167","168"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\DownloadButton.js",["169","170","171","172","173","174"],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":5,"column":1,"nodeType":"183","endLine":15,"endColumn":2},{"ruleId":"175","replacedBy":"184"},{"ruleId":"177","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":11,"column":8,"nodeType":"188","messageId":"189","endLine":11,"endColumn":14},{"ruleId":"186","severity":1,"message":"190","line":14,"column":21,"nodeType":"188","messageId":"189","endLine":14,"endColumn":29},{"ruleId":"175","replacedBy":"191"},{"ruleId":"177","replacedBy":"192"},{"ruleId":"181","severity":1,"message":"182","line":49,"column":1,"nodeType":"183","endLine":119,"endColumn":2},{"ruleId":"186","severity":1,"message":"193","line":55,"column":9,"nodeType":"188","messageId":"189","endLine":55,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":112,"column":9,"nodeType":"196","endLine":112,"endColumn":37},{"ruleId":"194","severity":1,"message":"195","line":129,"column":9,"nodeType":"196","endLine":129,"endColumn":37},{"ruleId":"186","severity":1,"message":"197","line":1,"column":25,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"198","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":20},{"ruleId":"186","severity":1,"message":"190","line":7,"column":22,"nodeType":"188","messageId":"189","endLine":7,"endColumn":30},{"ruleId":"199","severity":1,"message":"200","line":82,"column":6,"nodeType":"201","endLine":82,"endColumn":14,"suggestions":"202"},{"ruleId":"186","severity":1,"message":"190","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":30},{"ruleId":"186","severity":1,"message":"190","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":30},{"ruleId":"186","severity":1,"message":"203","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":16},{"ruleId":"186","severity":1,"message":"190","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":30},{"ruleId":"175","replacedBy":"204"},{"ruleId":"177","replacedBy":"205"},{"ruleId":"186","severity":1,"message":"197","line":1,"column":25,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"206","line":7,"column":9,"nodeType":"188","messageId":"189","endLine":7,"endColumn":12},{"ruleId":"199","severity":1,"message":"207","line":181,"column":6,"nodeType":"201","endLine":181,"endColumn":8,"suggestions":"208"},{"ruleId":"186","severity":1,"message":"209","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":14},{"ruleId":"186","severity":1,"message":"190","line":10,"column":22,"nodeType":"188","messageId":"189","endLine":10,"endColumn":30},{"ruleId":"186","severity":1,"message":"210","line":41,"column":10,"nodeType":"188","messageId":"189","endLine":41,"endColumn":15},{"ruleId":"186","severity":1,"message":"211","line":41,"column":17,"nodeType":"188","messageId":"189","endLine":41,"endColumn":25},{"ruleId":"186","severity":1,"message":"197","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"190","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":30},{"ruleId":"186","severity":1,"message":"212","line":12,"column":8,"nodeType":"188","messageId":"189","endLine":12,"endColumn":19},{"ruleId":"186","severity":1,"message":"213","line":13,"column":8,"nodeType":"188","messageId":"189","endLine":13,"endColumn":14},{"ruleId":"186","severity":1,"message":"214","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":1,"column":25,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"198","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":20},{"ruleId":"186","severity":1,"message":"190","line":7,"column":22,"nodeType":"188","messageId":"189","endLine":7,"endColumn":30},{"ruleId":"199","severity":1,"message":"215","line":41,"column":6,"nodeType":"201","endLine":41,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":60,"column":22,"nodeType":"219","messageId":"220","endLine":60,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":61,"column":27,"nodeType":"219","messageId":"220","endLine":61,"endColumn":29},{"ruleId":"217","severity":1,"message":"218","line":80,"column":22,"nodeType":"219","messageId":"220","endLine":80,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":81,"column":26,"nodeType":"219","messageId":"220","endLine":81,"endColumn":28},{"ruleId":"217","severity":1,"message":"218","line":100,"column":22,"nodeType":"219","messageId":"220","endLine":100,"endColumn":24},{"ruleId":"217","severity":1,"message":"218","line":101,"column":26,"nodeType":"219","messageId":"220","endLine":101,"endColumn":28},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],["221"],["222"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["221"],["222"],"no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.",["221"],["222"],"'handleOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'npbs'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'PieChart' is defined but never used.",["221"],["222"],"'map' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'color', 'getStates', and 'getValue'. Either include them or remove the dependency array.",["224"],"'moment' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'cbs'. Either include it or remove the dependency array.",["225"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [npbs, source]",{"range":"232","text":"233"},"Update the dependencies array to be: [color, getStates, getValue]",{"range":"234","text":"235"},"Update the dependencies array to be: [cbs]",{"range":"236","text":"237"},[2869,2877],"[npbs, source]",[6493,6495],"[color, getStates, getValue]",[1321,1323],"[cbs]"]