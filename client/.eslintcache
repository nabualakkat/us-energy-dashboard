[{"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js":"1","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js":"2","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js":"3","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js":"4","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js":"5","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js":"6","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js":"7","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js":"8","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js":"9","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js":"10","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js":"11","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js":"12","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js":"13","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js":"14","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js":"15","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js":"16","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js":"17","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js":"18","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js":"19","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js":"20","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js":"21","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js":"22","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js":"23","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js":"24","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js":"25","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js":"26","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChartWrapper.js":"27","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChart.js":"28","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\DownloadButton.js":"29","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\theme.js":"30","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\theme.js":"31"},{"size":1142,"mtime":1613013821121,"results":"32","hashOfConfig":"33"},{"size":708,"mtime":1613013785665,"results":"34","hashOfConfig":"33"},{"size":191,"mtime":1613014444609,"results":"35","hashOfConfig":"33"},{"size":447,"mtime":1612463429459,"results":"36","hashOfConfig":"33"},{"size":432,"mtime":1612387530769,"results":"37","hashOfConfig":"33"},{"size":389,"mtime":1613015006316,"results":"38","hashOfConfig":"33"},{"size":1141,"mtime":1612448798945,"results":"39","hashOfConfig":"33"},{"size":1472,"mtime":1613015789926,"results":"40","hashOfConfig":"33"},{"size":159,"mtime":1612452989907,"results":"41","hashOfConfig":"33"},{"size":2144,"mtime":1612817229123,"results":"42","hashOfConfig":"33"},{"size":2359,"mtime":1612816815114,"results":"43","hashOfConfig":"33"},{"size":5179,"mtime":1613012146213,"results":"44","hashOfConfig":"33"},{"size":542,"mtime":1613014038136,"results":"45","hashOfConfig":"33"},{"size":397,"mtime":1612448554711,"results":"46","hashOfConfig":"33"},{"size":3958,"mtime":1613052028779,"results":"47","hashOfConfig":"33"},{"size":2163,"mtime":1612992712665,"results":"48","hashOfConfig":"33"},{"size":2494,"mtime":1612807286695,"results":"49","hashOfConfig":"33"},{"size":2680,"mtime":1613051660253,"results":"50","hashOfConfig":"33"},{"size":436,"mtime":1612567630039,"results":"51","hashOfConfig":"33"},{"size":4009,"mtime":1612881791718,"results":"52","hashOfConfig":"33"},{"size":2007,"mtime":1613012396649,"results":"53","hashOfConfig":"33"},{"size":2062,"mtime":1612992283630,"results":"54","hashOfConfig":"33"},{"size":2820,"mtime":1612992032811,"results":"55","hashOfConfig":"33"},{"size":2602,"mtime":1612992581639,"results":"56","hashOfConfig":"33"},{"size":6604,"mtime":1612890576226,"results":"57","hashOfConfig":"33"},{"size":1511,"mtime":1612993193930,"results":"58","hashOfConfig":"33"},{"size":1391,"mtime":1612993348502,"results":"59","hashOfConfig":"33"},{"size":2205,"mtime":1613052085246,"results":"60","hashOfConfig":"33"},{"size":4542,"mtime":1612993222777,"results":"61","hashOfConfig":"33"},{"size":320,"mtime":1613015015756,"results":"62","hashOfConfig":"33"},{"size":160,"mtime":1613015131035,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"143x47j",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\App.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\styles\\Theme.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\index.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\store.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\index.js",[],["133","134"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\alert.js",["135"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\NavBar.js",["136","137"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\utils\\api.js",[],["138","139"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\data.js",["140"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\data.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\pages\\Landing.js",["141","142","143"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\types.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\alert.js",[],["144","145"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChart.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\XYChartWrapper.js",["146"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChartWrapper.js",["147"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  buttonGroup: {\r\n    width: '100%',\r\n    fontSize: '.8rem',\r\n    zIndex: 1000,\r\n  },\r\n  button: {\r\n    fontSize: '0.5rem',\r\n    width: '50%',\r\n  },\r\n}));\r\n\r\nconst PieChartWrapper = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('Production');\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Typography className={classes.title} variant=\"h6\">\r\n        Total {value} by Source\r\n      </Typography>\r\n      <Typography\r\n        className={`${classes.title} ${classes.subtitle}`}\r\n        variant=\"subtitle1\"\r\n      >\r\n        Latest Available: {moment(npbs[0].month).format('MMM YYYY')}\r\n      </Typography>\r\n      <ButtonGroup\r\n        className={classes.buttonGroup}\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        aria-label=\"outlined primary button group\"\r\n      >\r\n        <Button\r\n          onClick={() => setValue('Production')}\r\n          color={value === 'Production' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Production'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Production\r\n        </Button>\r\n        <Button\r\n          onClick={() => setValue('Consumption')}\r\n          color={value === 'Consumption' ? 'primary' : 'default'}\r\n          disableElevation={value === 'Consumption'}\r\n          disableRipple\r\n          className={classes.button}\r\n        >\r\n          Consumption\r\n        </Button>\r\n      </ButtonGroup>\r\n      <PieChart npbs={npbs} type={value} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nPieChartWrapper.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PieChartWrapper);\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\PieChart.js",["148"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\NPBS\\DataTable.js",["149","150"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//Local\r\nimport PieChart from './PieChart';\r\n//Material-UI\r\nimport { makeStyles, useTheme } from '@material-ui/core';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chartWrapper: {\r\n    padding: '1rem',\r\n    width: 'auto',\r\n    margin: '0.5rem',\r\n    height: '98%',\r\n    boxSizing: 'border-box',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    fontSize: '.8rem',\r\n  },\r\n  unit: {\r\n    fontSize: '.65rem',\r\n  },\r\n  table: {\r\n    width: '100%',\r\n    height: 'auto%',\r\n    marginBottom: '1rem',\r\n    boxSizing: 'border-box',\r\n  },\r\n  cell: {\r\n    paddingInline: 0,\r\n    paddingBlock: '0.75rem',\r\n  },\r\n}));\r\n\r\nconst DataTable = ({ npbs }) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(moment(npbs[0].month));\r\n  const set = npbs.filter(\r\n    (d) => moment(d.month).format('YYYY MM') === moment(value).format('YYYY MM')\r\n  );\r\n  const rows = set[0].data;\r\n  return (\r\n    <Card className={classes.chartWrapper}>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() => setValue(moment(value).subtract(1, 'months'))}\r\n          >\r\n            <ArrowBackIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h6\">\r\n            {moment(value).format('MMMM YYYY')}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton\r\n            onClick={() =>\r\n              set.length > 0 && setValue(moment(value).add(1, 'months'))\r\n            }\r\n            disabled={value >= moment(npbs[0].month)}\r\n          >\r\n            <ArrowForwardIosIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Table className={classes.table} aria-label=\"npbs-table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.cell}>Source</TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Production{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell className={classes.cell} align=\"right\">\r\n              Consumption{' '}\r\n              <Typography className={classes.unit} variant=\"subtitle1\">\r\n                (Trillion&nbsp;BTUs)\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow className={classes.row} key={row.source}>\r\n              <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                {row.source}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.production}\r\n              </TableCell>\r\n              <TableCell className={classes.cell} align=\"right\">\r\n                {row.consumption}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDataTable.propTypes = {\r\n  npbs: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  npbs: state.data.npbs.data,\r\n});\r\n\r\nexport default connect(mapStateToProps)(DataTable);\r\n",["151","152"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Emissions.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Expenditures.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Generation.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\data_cards\\Outage.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\Map.js",["153","154","155"],"import React, { useRef, useState, useLayoutEffect } from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4maps from '@amcharts/amcharts4/maps';\r\nimport am4geodata_usaAlbersLow from '@amcharts/amcharts4-geodata/usaAlbersLow';\r\n\r\nconst Map = ({ regional }) => {\r\n  const map = useRef(null);\r\n  const colorArray = [\r\n    '#F1EFD9',\r\n    '#EAEBCA',\r\n    '#DFE5BC',\r\n    '#D2DFAD',\r\n    '#C3D99F',\r\n    '#B3D291',\r\n    '#A0CB83',\r\n    '#8CC575',\r\n    '#77BE67',\r\n    '#60B659',\r\n    '#4CAF50',\r\n    '#48A754',\r\n    '#439F56',\r\n    '#3F9759',\r\n    '#3B8E5A',\r\n    '#36865B',\r\n    '#327D5C',\r\n    '#2E755B',\r\n    '#2A6C5A',\r\n    '#266458',\r\n  ];\r\n  const sum = (array) => {\r\n    return array.reduce((a, b) => a + b, 0);\r\n  };\r\n  const valueArray = regional.map((r) => {\r\n    const regionalArray = r.value.map((data) => data[1]);\r\n    return sum(regionalArray);\r\n  });\r\n  const sortedArray = valueArray.sort((a, b) => a - b);\r\n  const intervalLength =\r\n    (sortedArray[sortedArray.length - 1] - sortedArray[0]) /\r\n    (colorArray.length - 1);\r\n\r\n  const color = (value) => {\r\n    const interval = Math.floor((value - sortedArray[0]) / intervalLength);\r\n    return colorArray[interval];\r\n  };\r\n  const getValue = (region) => {\r\n    const regionData = regional.filter((r) => r.region === region);\r\n    const regionalValueArray = regionData[0].value.map((v) => v[1]);\r\n    return sum(regionalValueArray);\r\n  };\r\n  const getStates = (region) => {\r\n    const regionData = regional.filter((r) => r.region === region);\r\n    const states = regionData[0].states;\r\n    return states;\r\n  };\r\n  console.log(intervalLength);\r\n  console.log(valueArray);\r\n  console.log(color(1138349));\r\n  useLayoutEffect(() => {\r\n    let map = am4core.create('mapdiv', am4maps.MapChart);\r\n    map.geodata = am4geodata_usaAlbersLow;\r\n    map.projection = new am4maps.projections.Miller();\r\n    let california = new am4maps.MapPolygonSeries();\r\n    california.useGeodata = true;\r\n    california.include = getStates('California');\r\n    california.mapPolygons.template.tooltipText = `California: ${getValue(\r\n      'California'\r\n    )} megawatthours `;\r\n    california.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('California'))\r\n    );\r\n    map.series.push(california);\r\n    let carolinas = new am4maps.MapPolygonSeries();\r\n    carolinas.useGeodata = true;\r\n    carolinas.include = getStates('Carolinas');\r\n    carolinas.mapPolygons.template.tooltipText = `Carolinas: ${getValue(\r\n      'Carolinas'\r\n    )} megawatthours `;\r\n    carolinas.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Carolinas'))\r\n    );\r\n    map.series.push(carolinas);\r\n    let central = new am4maps.MapPolygonSeries();\r\n    central.useGeodata = true;\r\n    central.include = getStates('Central');\r\n    central.mapPolygons.template.tooltipText = `Central: ${getValue(\r\n      'Central'\r\n    )} megawatthours `;\r\n    central.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Central'))\r\n    );\r\n    map.series.push(central);\r\n    let florida = new am4maps.MapPolygonSeries();\r\n    florida.useGeodata = true;\r\n    florida.include = getStates('Florida');\r\n    florida.mapPolygons.template.tooltipText = `Florida: ${getValue(\r\n      'Florida'\r\n    )} megawatthours `;\r\n    florida.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Florida'))\r\n    );\r\n    map.series.push(florida);\r\n    let midAtlantic = new am4maps.MapPolygonSeries();\r\n    midAtlantic.useGeodata = true;\r\n    midAtlantic.include = getStates('Mid-Atlantic');\r\n    midAtlantic.mapPolygons.template.tooltipText = `Mid-Atlantic: ${getValue(\r\n      'Mid-Atlantic'\r\n    )} megawatthours `;\r\n    midAtlantic.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Mid-Atlantic'))\r\n    );\r\n    map.series.push(midAtlantic);\r\n    let newEngland = new am4maps.MapPolygonSeries();\r\n    newEngland.useGeodata = true;\r\n    newEngland.include = getStates('New England');\r\n    newEngland.mapPolygons.template.tooltipText = `New England: ${getValue(\r\n      'New England'\r\n    )} megawatthours `;\r\n    newEngland.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('New England'))\r\n    );\r\n    map.series.push(newEngland);\r\n    let newYork = new am4maps.MapPolygonSeries();\r\n    newYork.useGeodata = true;\r\n    newYork.include = getStates('New York');\r\n    newYork.mapPolygons.template.tooltipText = `New York: ${getValue(\r\n      'New York'\r\n    )} megawatthours `;\r\n    newYork.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('New York'))\r\n    );\r\n    map.series.push(newYork);\r\n    let northwest = new am4maps.MapPolygonSeries();\r\n    northwest.useGeodata = true;\r\n    northwest.include = getStates('Northwest');\r\n    northwest.mapPolygons.template.tooltipText = `Northwest: ${getValue(\r\n      'Northwest'\r\n    )} megawatthours `;\r\n    northwest.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Northwest'))\r\n    );\r\n    map.series.push(northwest);\r\n    let southeast = new am4maps.MapPolygonSeries();\r\n    southeast.useGeodata = true;\r\n    southeast.include = getStates('Southeast');\r\n    southeast.mapPolygons.template.tooltipText = `Southeast: ${getValue(\r\n      'Southeast'\r\n    )} megawatthours `;\r\n    southeast.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Southeast'))\r\n    );\r\n    map.series.push(southeast);\r\n    let southwest = new am4maps.MapPolygonSeries();\r\n    southwest.useGeodata = true;\r\n    southwest.include = getStates('Southwest');\r\n    southwest.mapPolygons.template.tooltipText = `Southwest: ${getValue(\r\n      'Southwest'\r\n    )} megawatthours `;\r\n    southwest.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Southwest'))\r\n    );\r\n    map.series.push(southwest);\r\n    let tennessee = new am4maps.MapPolygonSeries();\r\n    tennessee.useGeodata = true;\r\n    tennessee.include = getStates('Tennessee');\r\n    tennessee.mapPolygons.template.tooltipText = `Tennessee: ${getValue(\r\n      'Tennessee'\r\n    )} megawatthours `;\r\n    tennessee.mapPolygons.template.fill = am4core.color(\r\n      color(getValue('Tennessee'))\r\n    );\r\n    map.series.push(tennessee);\r\n    let texas = new am4maps.MapPolygonSeries();\r\n    texas.useGeodata = true;\r\n    texas.include = getStates('Texas');\r\n    texas.mapPolygons.template.tooltipText = `Texas: ${getValue(\r\n      'Texas'\r\n    )} megawatthours `;\r\n    texas.mapPolygons.template.fill = am4core.color(color(getValue('Texas')));\r\n    map.series.push(texas);\r\n  }, []);\r\n  return <div id=\"mapdiv\" style={{ width: '100%', height: '390px' }}></div>;\r\n};\r\n\r\nexport default Map;\r\n","C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\Regional\\RegionalWrapper.js",["156","157","158","159"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChartWrapper.js",["160","161","162","163","164"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\CBS\\BarChart.js",[],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\components\\DownloadButton.js",["165","166","167","168","169","170"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\reducers\\theme.js",["171"],"C:\\Users\\Nabu\\Desktop\\Projects\\energy-forecast\\client\\src\\actions\\theme.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":1,"nodeType":"178","endLine":15,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":11,"column":8,"nodeType":"181","messageId":"182","endLine":11,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":15,"column":22,"nodeType":"181","messageId":"182","endLine":15,"endColumn":30},{"ruleId":"172","replacedBy":"184"},{"ruleId":"174","replacedBy":"185"},{"ruleId":"176","severity":1,"message":"177","line":49,"column":1,"nodeType":"178","endLine":119,"endColumn":2},{"ruleId":"179","severity":1,"message":"186","line":59,"column":9,"nodeType":"181","messageId":"182","endLine":59,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":116,"column":9,"nodeType":"189","endLine":116,"endColumn":37},{"ruleId":"187","severity":1,"message":"188","line":139,"column":9,"nodeType":"189","endLine":139,"endColumn":37},{"ruleId":"172","replacedBy":"190"},{"ruleId":"174","replacedBy":"191"},{"ruleId":"179","severity":1,"message":"183","line":9,"column":22,"nodeType":"181","messageId":"182","endLine":9,"endColumn":30},{"ruleId":"179","severity":1,"message":"183","line":9,"column":22,"nodeType":"181","messageId":"182","endLine":9,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":75,"column":6,"nodeType":"194","endLine":75,"endColumn":25,"suggestions":"195"},{"ruleId":"179","severity":1,"message":"196","line":7,"column":8,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":9,"column":22,"nodeType":"181","messageId":"182","endLine":9,"endColumn":30},{"ruleId":"172","replacedBy":"197"},{"ruleId":"174","replacedBy":"198"},{"ruleId":"179","severity":1,"message":"199","line":1,"column":25,"nodeType":"181","messageId":"182","endLine":1,"endColumn":33},{"ruleId":"179","severity":1,"message":"200","line":7,"column":9,"nodeType":"181","messageId":"182","endLine":7,"endColumn":12},{"ruleId":"192","severity":1,"message":"201","line":181,"column":6,"nodeType":"194","endLine":181,"endColumn":8,"suggestions":"202"},{"ruleId":"179","severity":1,"message":"203","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"179","severity":1,"message":"183","line":10,"column":22,"nodeType":"181","messageId":"182","endLine":10,"endColumn":30},{"ruleId":"179","severity":1,"message":"204","line":41,"column":10,"nodeType":"181","messageId":"182","endLine":41,"endColumn":15},{"ruleId":"179","severity":1,"message":"205","line":41,"column":17,"nodeType":"181","messageId":"182","endLine":41,"endColumn":25},{"ruleId":"179","severity":1,"message":"199","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":9,"column":22,"nodeType":"181","messageId":"182","endLine":9,"endColumn":30},{"ruleId":"179","severity":1,"message":"206","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":19},{"ruleId":"179","severity":1,"message":"207","line":13,"column":8,"nodeType":"181","messageId":"182","endLine":13,"endColumn":14},{"ruleId":"179","severity":1,"message":"208","line":14,"column":8,"nodeType":"181","messageId":"182","endLine":14,"endColumn":16},{"ruleId":"209","severity":1,"message":"210","line":60,"column":22,"nodeType":"211","messageId":"212","endLine":60,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":61,"column":27,"nodeType":"211","messageId":"212","endLine":61,"endColumn":29},{"ruleId":"209","severity":1,"message":"210","line":80,"column":22,"nodeType":"211","messageId":"212","endLine":80,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":81,"column":26,"nodeType":"211","messageId":"212","endLine":81,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":100,"column":22,"nodeType":"211","messageId":"212","endLine":100,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":101,"column":26,"nodeType":"211","messageId":"212","endLine":101,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":7,"column":1,"nodeType":"178","endLine":15,"endColumn":2},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.",["213"],["214"],"'handleOpen' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["213"],["214"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.","ArrayExpression",["215"],"'PieChart' is defined but never used.",["213"],["214"],"'useState' is defined but never used.","'map' is assigned a value but never used.","React Hook useLayoutEffect has missing dependencies: 'color', 'getStates', and 'getValue'. Either include them or remove the dependency array.",["216"],"'moment' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [npbs, type, theme, colors]",{"range":"221","text":"222"},"Update the dependencies array to be: [color, getStates, getValue]",{"range":"223","text":"224"},[2296,2315],"[npbs, type, theme, colors]",[6493,6495],"[color, getStates, getValue]"]